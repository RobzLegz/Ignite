[{"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\index.js":"1","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\App.js":"2","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reportWebVitals.js":"3","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\index.js":"4","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\gamesReducer.js":"5","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\actions\\gamesAction.js":"6","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\api.js":"7","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\pages\\Home.js":"8","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\Game.js":"9","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\GlobalStyles.js":"10","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\detailReducer.js":"11","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\actions\\detailAction.js":"12","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\GameDetail.js":"13","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\util.js":"14","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\Nav.js":"15"},{"size":963,"mtime":1609533118657,"results":"16","hashOfConfig":"17"},{"size":379,"mtime":1609596249473,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":306,"mtime":1609517883710,"results":"20","hashOfConfig":"17"},{"size":795,"mtime":1613240358392,"results":"21","hashOfConfig":"17"},{"size":938,"mtime":1613240500373,"results":"22","hashOfConfig":"17"},{"size":1718,"mtime":1613240285323,"results":"23","hashOfConfig":"17"},{"size":2874,"mtime":1609576114199,"results":"24","hashOfConfig":"17"},{"size":1261,"mtime":1609576693959,"results":"25","hashOfConfig":"17"},{"size":993,"mtime":1609536751219,"results":"26","hashOfConfig":"17"},{"size":609,"mtime":1609534129060,"results":"27","hashOfConfig":"17"},{"size":510,"mtime":1609534216560,"results":"28","hashOfConfig":"17"},{"size":4790,"mtime":1609595911579,"results":"29","hashOfConfig":"17"},{"size":307,"mtime":1609538345818,"results":"30","hashOfConfig":"17"},{"size":1639,"mtime":1613240877865,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11r5fbl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\index.js",[],["66","67"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\App.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reportWebVitals.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\index.js",["68"],"import { act } from \"react-dom/test-utils\";\r\nimport { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./gamesReducer\";\r\nimport detailReducer from \"./detailReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n    detail: detailReducer,\r\n});\r\n\r\nexport default rootReducer;","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\gamesReducer.js",["69","70"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\actions\\gamesAction.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\api.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\pages\\Home.js",["71"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { loadGames } from \"../actions/gamesAction\";\r\nimport Game from \"../components/Game\";\r\nimport styled from \"styled-components\";\r\nimport {motion, AnimatePresence, AnimateSharedLayout} from \"framer-motion\";\r\nimport { upcomingGamesURL } from '../api';\r\nimport GameDetail from \"../components/GameDetail\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n\r\n    //Get current location\r\n     const location = useLocation();\r\n     const pathId = location.pathname.split(\"/\")[2]; //sets path to game id\r\n\r\n    //Fetch games\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadGames());\r\n    }, [dispatch]);\r\n\r\n    const {popular, newGames, upcoming} = useSelector((state) => state.games);\r\n    \r\n\r\n\r\n    return (\r\n        <GameList>\r\n            <AnimateSharedLayout type=\"crossfade\" >\r\n                <AnimatePresence>\r\n                    {pathId && <GameDetail pathId={pathId} />}\r\n                </AnimatePresence>\r\n                <h2>Popular Games</h2>\r\n                <Games>\r\n                    {popular.map((game) => (\r\n                        <Game\r\n                            name={game.name} \r\n                            released={game.released} \r\n                            id={game.id} \r\n                            image={game.background_image}\r\n                            key={game.id}\r\n                        />\r\n                    ))}\r\n                </Games>\r\n                <h2>upcoming Games</h2>\r\n                <Games>\r\n                    {upcoming.map((game) => (\r\n                        <Game\r\n                            name={game.name} \r\n                            released={game.released} \r\n                            id={game.id} \r\n                            image={game.background_image}\r\n                            key={game.id}\r\n                        />\r\n                    ))}\r\n                </Games>\r\n                <h2>New Games</h2>\r\n                <Games>\r\n                    {newGames.map((game) => (\r\n                        <Game\r\n                            name={game.name} \r\n                            released={game.released} \r\n                            id={game.id} \r\n                            image={game.background_image}\r\n                            key={game.id}\r\n                        />\r\n                    ))}\r\n                </Games>\r\n            </AnimateSharedLayout>\r\n        </GameList>\r\n    );\r\n};\r\n\r\nconst GameList = styled(motion.div)`\r\n    padding: 0rem 5rem;\r\n    h2{\r\n        padding:5rem 0rem;\r\n    }\r\n`;\r\n\r\nconst Games = styled(motion.div)`\r\n    min-height:80vh;\r\n    display:grid;\r\n    grid-template-columns: repeat(auto-fit,minmax(500px,1fr));\r\n    grid-column-gap: 3rem;\r\n    grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home;\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\Game.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\GlobalStyles.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\reducers\\detailReducer.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\actions\\detailAction.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\GameDetail.js",["72"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {motion} from \"framer-motion\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {smallImage} from \"../util\";\r\nimport playstation from \"../img/playstation.svg\";\r\nimport steam from \"../img/steam.svg\";\r\nimport xbox from \"../img/xbox.svg\";\r\nimport nintendo from \"../img/nintendo.svg\";\r\nimport apple from \"../img/apple.svg\";\r\nimport gamepad from \"../img/gamepad.svg\";\r\nimport starEmpty from \"../img/star-empty.png\";\r\nimport starFull from \"../img/star-full.png\";\r\n\r\nfunction GameDetail({pathId}) {\r\n\r\n    const history = useHistory();\r\n\r\n    const exitDetailHan = (e) => {\r\n        const element = e.target;\r\n        if(element.classList.contains(\"shadow\")){\r\n            document.body.style.overflow = \"auto\";\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    const getStars = () => {\r\n        const stars = [];\r\n        const rating = Math.floor(game.rating);\r\n        for(let i = 1; 1 <= 5; i++){\r\n            if(i <= rating){\r\n                stars.push(<img alt=\"star\" key={i} src={starFull}></img>)\r\n            }else{\r\n                stars.push(<img alt=\"star\" key={i} src={starEmpty}></img>)\r\n            }\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    const getPlatform = (platform) => {\r\n        switch(platform){\r\n            case \"PlayStation 4\":\r\n                return playstation\r\n            case \"Xbox one\":\r\n                return xbox;\r\n            case \"PC\":\r\n                return steam;\r\n            case \"Nintendo Switch\":\r\n                return nintendo;\r\n            case \"ios\":\r\n                return apple;\r\n            default:\r\n                return gamepad;\r\n        }\r\n    }\r\n\r\n    const {screen,game, isLoading} = useSelector((state) => state.detail);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading && (\r\n                <CardShadow  className=\"shadow\" onClick={exitDetailHan}>\r\n                    <Detail layoutId={pathId}>\r\n                        <Stats>\r\n                            <div className=\"rating\">\r\n                                <motion.h3 layoutId={`title${pathId}`}>{game.name}</motion.h3>\r\n                                <p>Rating: {game.rating}</p>\r\n                                {getStars()}\r\n                            </div>\r\n                            <Info>\r\n                                <h3>Platforms</h3>\r\n                                <Platforms>\r\n                                    {game.platforms.map((data) => (\r\n                                        <img key={data.platform.id} src={getPlatform.name}/>\r\n                                    ))}\r\n                                </Platforms>\r\n                            </Info>\r\n                        </Stats>\r\n                        <Media>\r\n                            <motion.img layoutId={`imge${pathId}`} src={smallImage(game.background_image, 1280)} alt={game.background_image}/>\r\n                        </Media>\r\n                        <Description>\r\n                            <p>{game.description_raw}</p>\r\n                        </Description>\r\n                        <div className=\"gallery\">\r\n                            {screen.results.map((screen) => (\r\n                                <img src={smallImage(screen.image, 1280)} key={screen.id} alt={screen.image}/>\r\n                            ))}\r\n                        </div>\r\n                    </Detail>\r\n                </CardShadow>\r\n            )}    \r\n        </>\r\n    );\r\n};\r\n\r\nconst CardShadow = styled(motion.div)`\r\n    width:100%;\r\n    min-height:100vh;\r\n    overflow-y:scroll;\r\n    background:rgba(0,0,0,0.5);\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    &::-webkit-scrollbar{\r\n        width:0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        background-color: #333;\r\n    }\r\n    &::-webkit-scrollbar-track{\r\n        background:#fff;\r\n    }\r\n    z-index:5;\r\n`;\r\n\r\nconst Detail = styled(motion.div)`\r\n    width:80%;\r\n    border-radius: 1rem;\r\n    padding:2rem 5rem;\r\n    background:#fff;\r\n    position:absolute;\r\n    left:10%;\r\n    color:#000;\r\n    img{\r\n        width:100%;\r\n    }\r\n    z-index:10;\r\n`;\r\n\r\nconst Stats = styled(motion.div)`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    img{\r\n        width:2rem;\r\n        height:2rem;\r\n        display:inline; \r\n    }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n    text-align: center;\r\n`;\r\n\r\nconst Platforms = styled(motion.div)`\r\n    display:flex;\r\n    justify-content:space-evenly;\r\n    img{\r\n        margin-left:3rem;\r\n    }\r\n`;\r\n\r\nconst Media = styled(motion.div)`\r\n    margin-top: 5rem;\r\n    img{\r\n        width:100%;\r\n    }\r\n`;\r\n\r\nconst Description = styled(motion.div)`\r\n    margin: 5rem 0rem;\r\n`;\r\n\r\n\r\n\r\nexport default GameDetail;\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\util.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React-course\\ignite\\src\\components\\Nav.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"81","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":29,"column":7,"nodeType":"79","messageId":"80","endLine":29,"endColumn":17},{"ruleId":"77","severity":1,"message":"83","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":75,"column":41,"nodeType":"86","endLine":75,"endColumn":93},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'fetchGames' is assigned a value but never used.","'upcomingGamesURL' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]